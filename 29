import React, { useState } from 'react';
import { Card, CardContent, CardHeader } from '../components/ui/Card';
import { Input } from '../components/ui/Input';
import { Button } from '../components/ui/Button';
import { Search, Download, Filter } from 'lucide-react';
import { generateKeywordResearchData } from '../data/mockData';
import { KeywordResearchResult } from '../types';
import { cn } from '../lib/utils';

const TABS = ['Keyword Ideas', 'Related Keywords', 'Questions'];

const KeywordResearch: React.FC = () => {
  const [activeTab, setActiveTab] = useState(TABS[0]);
  const [results, setResults] = useState<KeywordResearchResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [searched, setSearched] = useState(false);

  const handleSearch = () => {
    setIsLoading(true);
    setSearched(true);
    setTimeout(() => {
      setResults(generateKeywordResearchData(50));
      setIsLoading(false);
    }, 1500);
  };

  return (
    <div className="space-y-6">
      <div className="space-y-1">
        <h2 className="text-3xl font-bold tracking-tight">Keyword Research</h2>
        <p className="text-muted-foreground max-w-2xl">
          Uncover thousands of keyword ideas, analyze their SEO metrics, and find the best opportunities for your content strategy.
        </p>
      </div>
      
      <Card>
        <CardContent className="p-4 sm:p-6">
          <div className="flex flex-col sm:flex-row gap-2">
            <Input 
              placeholder="Enter a keyword, phrase, or topic..." 
              className="flex-grow"
              onKeyDown={(e) => e.key === 'Enter' && handleSearch()}
            />
            <Button onClick={handleSearch} disabled={isLoading} className="w-full sm:w-auto">
              {isLoading ? (
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-current"></div>
              ) : (
                <Search className="mr-2 h-4 w-4" />
              )}
              {isLoading ? 'Searching...' : 'Search'}
            </Button>
          </div>
        </CardContent>
      </Card>

      {searched && (
        <Card>
          <CardHeader>
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
              <div className="border-b w-full sm:w-auto">
                <div className="-mb-px flex space-x-4">
                  {TABS.map(tab => (
                    <button
                      key={tab}
                      onClick={() => setActiveTab(tab)}
                      className={cn(
                        "py-2 px-3 text-sm font-medium whitespace-nowrap",
                        activeTab === tab 
                          ? 'border-b-2 border-primary text-primary' 
                          : 'border-transparent text-muted-foreground hover:text-foreground'
                      )}
                    >
                      {tab}
                    </button>
                  ))}
                </div>
              </div>
              <div className="flex items-center gap-2 flex-shrink-0">
                <Button variant="outline" size="sm">
                  <Filter className="mr-2 h-4 w-4" />
                  Filters
                </Button>
                <Button variant="outline" size="sm">
                  <Download className="mr-2 h-4 w-4" />
                  Export
                </Button>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            {isLoading ? (
              <div className="flex flex-col justify-center items-center h-64 text-center">
                 <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mb-4"></div>
                <p className="text-muted-foreground">Analyzing keywords...</p>
              </div>
            ) : (
              <div className="overflow-x-auto">
                <table className="w-full text-sm text-left">
                  <thead className="text-xs text-muted-foreground uppercase bg-secondary/50">
                    <tr>
                      <th scope="col" className="px-6 py-3 font-medium">Keyword</th>
                      <th scope="col" className="px-6 py-3 font-medium text-right">Volume</th>
                      <th scope="col" className="px-6 py-3 font-medium text-right">CPC</th>
                      <th scope="col" className="px-6 py-3 font-medium">Competition</th>
                      <th scope="col" className="px-6 py-3 font-medium text-right">Difficulty</th>
                      <th scope="col" className="px-6 py-3 font-medium text-right">Opportunity</th>
                    </tr>
                  </thead>
                  <tbody>
                    {results.map(kw => (
                      <tr key={kw.id} className="border-b hover:bg-accent/50 transition-colors">
                        <th scope="row" className="px-6 py-4 font-medium whitespace-nowrap text-foreground">{kw.keyword}</th>
                        <td className="px-6 py-4 text-right">{kw.volume.toLocaleString()}</td>
                        <td className="px-6 py-4 text-right">{kw.cpc}</td>
                        <td className="px-6 py-4">
                          <span className={cn(
                            "px-2 py-1 inline-block rounded-full text-xs font-semibold",
                            kw.competition === 'Low' && 'bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300',
                            kw.competition === 'Medium' && 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/50 dark:text-yellow-300',
                            kw.competition === 'High' && 'bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300',
                          )}>
                            {kw.competition}
                          </span>
                        </td>
                        <td className="px-6 py-4 text-right">{kw.difficulty}</td>
                        <td className="px-6 py-4 text-right font-semibold text-primary">{kw.opportunity}%</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default KeywordResearch;
